paths:
  /api/carts/:
    get:
      summary: Obtener todos los carritos
      tags:
        - Carts
      responses:
        "200":
          description: Los carritos fueron obtenidos con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Error interno del servidor,usualmente generado por una query defectuosa
    post:
      summary: Crea un carrito vacio en la base de datos
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/CartBody"
      responses:
        "200":
          description: El carrito fue creado con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa
  /api/carts/{cid}:
    get:
      summary: Obtener un carrito por id
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: Id del carrito a obtener
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue obtenido con éxito
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa
    put:
      summary: Vacia el carrito de productos
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: Id del carrito que se desea vaciar
          schema:
            $type: String
      responses:
        "200":
          description: El carrito vaciado con éxito
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa
  /api/carts/{cid}/product/{pid}:
    put:
      summary: Agrega un producto al carrito y aumenta o disminuye la cantidad de un producto dentro del carrito
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: ID del carrito que se desea modificar
          schema:
            type: string
        - name: pid
          in: query
          required: true
          description: ID del producto que se desea modificar
          schema:
            type: string
      responses:
        "200":
          description: El carrito fue actualizado con éxito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa
    delete:
      summary: Elimina un producto dentro del carrito
      tags:
        - Carts
      parameters:
        - name: id
          in: path
          required: true
          description: Id del producto que se desea eliminar
          schema:
            type: String
        - name: pid
          in: query
          required: true
          description: ID del producto que se desea modificar
          schema:
            type: string
      responses:
        "200":
          description: El producto fue eliminado con éxito
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuosa
components:
  schemas:
    Carts:
      type: Object
      properties:
        products:
          type: Array
          items:
            type: Object
            properties:
              product:
                type: string
                format: mongoId
                description: ID del producto
              quantity:
                type: Number
                description: Cantidad del producto
      example:
        products:            
        type: object
            properties:
              cid:
                type: string
                format: mongoId
                description: ID del usuario que posee el carrito
              pid:
                type: string
                format: mongoId
                description: ID del producto que se desea agregar o modificar del carrito
              required:
                - cid
                - pid
            example:
              cart:
                - _id: ObjectId("abc12345ascxsdfgbxxssdfs")
              products:
                - product: ObjectId("abc12345ascxsdfgbxxssdfs")
                  quantity: 2
                - product: ObjectId("abc12345ascxsdfgbfdsfa")
                  quantity: 1
  requestBodies:
    CartBody:
      description: Objeto JSON que contiene el ID del usuario y el ID del producto
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Cart"
